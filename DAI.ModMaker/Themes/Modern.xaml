<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <Color x:Key="AccentDark1">#FF0087AB</Color>
    <Color x:Key="AccentDark2">#FF00769A</Color>
    <Color x:Key="AccentDark3">#FF00648A</Color>
    <Color x:Key="Accent">#FF0099BC</Color>
    <Color x:Key="AccentLight1">#FF1CA6C6</Color>
    <Color x:Key="AccentLight2">#FF38B4D0</Color>
    <Color x:Key="AccentLight3">#FF55C1D9</Color>

    <SolidColorBrush x:Key="AccentDark1Brush" Color="{StaticResource AccentDark1}" />
    <SolidColorBrush x:Key="AccentDark2Brush" Color="{StaticResource AccentDark2}" />
    <SolidColorBrush x:Key="AccentDark3Brush" Color="{StaticResource AccentDark3}" />
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource Accent}" />
    <SolidColorBrush x:Key="AccentLight1Brush" Color="{StaticResource AccentLight1}" />
    <SolidColorBrush x:Key="AccentLight2Brush" Color="{StaticResource AccentLight2}" />
    <SolidColorBrush x:Key="AccentLight3Brush" Color="{StaticResource AccentLight3}" />


    <Color x:Key="BaseHigh">#FF000000</Color>
    <Color x:Key="BaseLow">#33000000</Color>
    <Color x:Key="BaseMedium">#99000000</Color>
    <Color x:Key="BaseMediumHigh">#CC000000</Color>
    <Color x:Key="BaseMediumLow">#66000000</Color>

    <SolidColorBrush x:Key="BaseLowBrush" Color="{StaticResource BaseLow}"/>
    <SolidColorBrush x:Key="BaseHighBrush" Color="{StaticResource BaseHigh}"/>
    <SolidColorBrush x:Key="BaseMediumBrush" Color="{StaticResource BaseMedium}"/>
    <SolidColorBrush x:Key="BaseMediumHighBrush" Color="{StaticResource BaseMediumHigh}"/>
    <SolidColorBrush x:Key="BaseMediumLowBrush" Color="{StaticResource BaseMediumLow}"/>

    <SolidColorBrush x:Key="BaseHighColorOver" Color="{StaticResource BaseHigh}" Opacity="0.1" />

    <Color x:Key="ListLow">#19000000</Color>
    <Color x:Key="ListMedium">#33000000</Color>
    <Color x:Key="ErrorText">#C50500</Color>
    <SolidColorBrush x:Key="ListLowBrush" Color="{StaticResource ListLow}" />
    <SolidColorBrush x:Key="ListMediumBrush" Color="{StaticResource ListMedium}" />
    <SolidColorBrush x:Key="ErrorTextBrush" Color="{StaticResource ErrorText}" />


    <SolidColorBrush x:Key="Transparent" Color="Transparent" />

    <Thickness x:Key="MenuSeparatorPadding">0,4,0,4</Thickness>
    <Thickness x:Key="MenuItemPadding">16,0,16,2</Thickness>

    <Style x:Key="DefaultGridSplitterStyle" TargetType="GridSplitter">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}" />
    </Style>

    <Style TargetType="GridSplitter" BasedOn="{StaticResource DefaultGridSplitterStyle}" />

    <Style x:Key="DefaultMenuItemSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="{DynamicResource MenuSeparatorPadding}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator" BasedOn="{StaticResource DefaultMenuItemSeparatorStyle}" />

    <Style x:Key="DefaultMenuStyle" TargetType="Menu">
        <Setter Property="Background" Value="{DynamicResource Transparent}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Menu" BasedOn="{StaticResource DefaultMenuStyle}" />


    <Style x:Key="DefaultMenuItemStyle" TargetType="MenuItem">
        <!--<Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />-->
        <Setter Property="Background" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource BaseHighBrush}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="{DynamicResource Transparent}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Transparent}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Padding" Value="{DynamicResource MenuItemPadding}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{DynamicResource Transparent}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Transparent}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="IsTabStop" Value="True" />
                <Setter Property="Padding" Value="{DynamicResource MenuItemPadding}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Background" Value="{DynamicResource Transparent}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Transparent}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="12,0,12,2" />
                <Setter Property="Foreground" Value="{DynamicResource BaseHighBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}" />


    <Thickness x:Key="ButtonPadding">16,5,16,6</Thickness>
    
    <Style x:Key="DefaultButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource BaseLowBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource BaseHighBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Transparent}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource {x:Static SystemParameters.FocusVisualStyleKey}}" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource BaseHighColorOver}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource BaseHighBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource BaseMediumLowBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource BaseHighBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource BaseLowBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource BaseMediumLowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}" />

    <Style x:Key="AccentButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Transparent}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Background"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                        <Border
                            x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                TextElement.Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource AccentLight1Brush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource AccentDark1Brush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Background" Property="Background" Value="{DynamicResource BaseLowBrush}" />
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource BaseMediumLowBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>